#!/bin/bash
set -e
set -x

export PATH=$PATH:/var/vcap/packages/jq:/var/vcap/packages/cli/bin

CF_API_URL='<%= p("cf.api_url") %>'
CF_USERNAME='<%= p("cf.username") %>'
CF_PASSWORD='<%= p("cf.password") %>'
CF_DEFAULT_ORG='<%= p("cf.org") %>'
CF_DEFAULT_SPACE='<%= p("cf.default_space") %>'

SERVICE_NAME='<%= p("autosleep.cf.service.broker.id") %>'
SERVICE_PLAN='<%= p("autosleep.cf.service.plan.id") %>'
SERVICE_INSTANCE_NAME='<%= p("autosleep.cf.service.instance.id") %>'

IDLE_DURATION='<%= p("autosleep.services-instances.idle-duration") %>'

<% if properties.autosleep.cf.filtered_orgs %>CF_FILTERED_ORGS='<%= p("autosleep.cf.filtered_orgs").map.join('|') %>'<% else %>CF_FILTERED_ORGS=''<% end %>
<% if properties.autosleep.cf.filtered_spaces %>CF_FILTERED_SPACES='<%= p("autosleep.cf.filtered_spaces").map.join('|') %>'<% else %>CF_FILTERED_SPACES=''<% end %>

SECRET='<%= p("autosleep.services-instances.secret") %>'

DRY_RUN='<%= p("autosleep.unprovision.dry_run") %>'

cf login -a $CF_API_URL  -u $CF_USERNAME -p $CF_PASSWORD  -o $CF_DEFAULT_ORG -s $CF_DEFAULT_SPACE --skip-ssl-validation

# We retrieve all orgs 
if [ -z "$CF_FILTERED_ORGS" ]
then
  # CF_FILTERED_ORGS is empty
  orgs=`cf orgs | tail -n +4`
else
  # CF_FILTERED_ORGS is not empty
  orgs=`cf orgs | tail -n +4 | egrep -v "${CF_FILTERED_ORGS}"`
fi
if [ -z "$orgs" ]
then
  echo "There are no orgs where AutoSleep must be enabled"
  exit 0
fi

# We loop on each orgs
for org in $orgs;
do
  cf target -o $org 1>/dev/null 2>&1
  if [ -z "$CF_FILTERED_SPACES" ]
  then
    # CF_FILTERED_SPACES is empty
    spaces=`cf spaces | tail -n +4`
  else
    # CF_FILTERED_SPACES is not empty
    spaces=`cf spaces | tail -n +4 | egrep -v "${CF_FILTERED_SPACES}"`
  fi
  for space in $spaces;
  do
    cf target -s $space 1>/dev/null 2>&1
    if [ `cf services | grep "^$SERVICE_INSTANCE_NAME" | wc -l` -ne 0 ]
    then
      echo "AutoSleep is enabled in org $org, space $space. We unprovision it."
      cf delete-service $SERVICE_INSTANCE_NAME -f
    fi
    echo
    echo
  done
done

